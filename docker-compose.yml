version: '3.8'

services:
  sse-mcp-server:
    build:
      context: .
      dockerfile: srv/sse-mcp-server/Dockerfile
      args:
        RUNTIME_IDENTIFIER: linux-arm64
    platform: linux/arm64
    container_name: sse-mcp-server
    ports:
      - "${SSE_PORT:-5561}:5561"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5561
      - ConnectionStrings__SupportWizardDB=Filename=/app/db/ev-supportwizard.db
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - DOTNET_RUNNING_IN_CONTAINER=true
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      # API Keys from .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - IONOS_API_KEY=${IONOS_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZUREOAI_API_KEY=${AZUREOAI_API_KEY}
      - LMSTUDIO_API_KEY=${LMSTUDIO_API_KEY}
      - OLLAMA_API_KEY=${OLLAMA_API_KEY}
    volumes:
      - "${DB_PATH:-./run/sse/db}:/app/db:rw"
      - "${SSE_CONFIG_PATH:-./run/sse/appsettings.json}:/app/appsettings.json:ro"
    user: "1001:1001"
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5561/health"]
#      interval: 30s
#      timeout: 10s
#      start_period: 60s
#      retries: 3
    networks:
      - mcp-network

  stdio-mcp-server:
    build:
      context: .
      dockerfile: srv/stdio-mcp-server/Dockerfile
      args:
        RUNTIME_IDENTIFIER: linux-arm64
    platform: linux/arm64
    container_name: stdio-mcp-server
    environment:
      - DOTNET_ENVIRONMENT=Production
      - ConnectionStrings__SupportWizardDB=Filename=/app/db/ev-supportwizard.db
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - DOTNET_RUNNING_IN_CONTAINER=true
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      # API Keys from .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - IONOS_API_KEY=${IONOS_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZUREOAI_API_KEY=${AZUREOAI_API_KEY}
      - LMSTUDIO_API_KEY=${LMSTUDIO_API_KEY}
      - OLLAMA_API_KEY=${OLLAMA_API_KEY}
    volumes:
      - "${DB_PATH:-./run/stdio/db}:/app/db:rw"
      - "${STDIO_CONFIG_PATH:-./run/stdio/appsettings.json}:/app/appsettings.json:ro"
    user: "1001:1001"
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge

volumes:
  mcp-data:
    driver: local